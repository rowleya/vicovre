#summary Description of the REST Interface for recording playback control

= Introduction =

This page details the REST interface used to list, delete and set permissions on who can play back recordings

= Details =

|| *HTTP Method* || *URL Format* || *Description* || *Return Content Types* || *Return Entity* ||
|| GET || {{{http://<url>/recording/<folder>}}} || Lists the recordings || application/json, text/xml || The list of recordings.  See below for details. ||
|| GET || {{{http://<url>/recording/<folder>/<id>/streams}}} || Lists the streams in the recording. || application/json, text/xml || The list of streams.  See below for details. ||
|| GET || {{{http://<url>/recording/<folder>/<id>/layouts}}} || Lists the layouts of the recording. || application/json, text/xml || The list of layouts.  See below for details. ||
|| GET || {{{http://<url>/recording/<folder>/<id>/acl/<acl-type>}}} || Gets the Access Control List of the recording.  The {{{<acl-type>}}} can be one of play, read, or annotate.  || application/json, text/xml || The acl.  See [RecordingInterface here] for details. ||
|| PUT || {{{http://<url>/recording/<folder>/<id>?<metadata-details>}}} || Sets the recording metadata.  See below for details accepted. || None || None ||
|| PUT || {{{http://<url>/recording/<folder>/<id>/acl/<acl-type>?<acl-details>}}} || Sets the recording ACL.  See [RecordingInterface here] for details accepted. || None || None ||
|| DELETE || {{{http://<url>/recording/<folder>/<id>}}} || Deletes the recording. || None || None ||

== List of Recordings == 
If the return type is text/xml, the list is formatted as follows:
{{{
<recordings>

    <!-- One for each recording -->
    <recording>

        <!-- The id of the recording -->
        <id>...</id>

        <metadata>
            
            <!-- The name of the metadata primary key -->
            <primaryKey>...</primaryKey>

            <!-- One for each item of metadata -->
            <key>
                
                <!-- The name of the key -->
                <name>...</name>

                <!-- The value of the key -->
                <value>...</value>
                
                <!-- True if the value is editable -->
                <editable>...</editable>

                <!-- True if the value is visible -->
                <visible>...</visible>

                <!-- True if the value is multiline -->
                <multiline>...</multiline>

            </key>

        </metadata>

        <!-- The date/time at which the recording was made (see RecordingInterface for format) -->
        <startTime>...</startTime>

        <!-- The duration of the recording in milliseconds -->
        <duration>...</duration>

        <!-- The amount of time in milliseconds after then end of the recording after which it will be automatically deleted (0 = infinite) -->
        <lifetime>...</lifetime>
        
        <!-- True if the recording can be edited by the current user, false otherwise -->
        <isEditable>...</isEditable>

    </recording>
</recordings>
}}}

If the return type is application/json, the list is formatted as follows:
{{{
{"recording":[
    
    /* 0 or more recordings */
    {

    /* The id of the recording */
    "id":"...",

    "metadata":
        {

        /* The primary key of the metadata */
        "primaryKey":"...",

        "key":[

              /* One for each key */
              {
                  
                  /* The name of the item */
                  "name":"...",
                  
                  /* The value of the item */
                  "value":"...",
                  
                  /* True if the item is editable */
                  "editable":"...",
                  
                  /* True if the item is visible */
                  "visible":"...",

                  /* True if the item is multiline */
                  "multiline":"..."
              },
        ]},
    
    /* The date / time that the recording was made (see RecordingInterface for format) */
    "startTime":"...",

    /* The duration of the recording in milliseconds */
    "duration":"...",

    /* The amount of time in milliseconds after then end of the recording after which it will be automatically deleted (0 = infinite) */
    "lifetime":"...",
        
    /* True if the recording can be edited by the current user, false otherwise */
    "isEditable":"..."
    },
    ...
]}
}}}

== List of Streams ==
If the return type is text/xml, the list will be formatted as follows:

{{{
<streams>
     
    <!-- One for each streams -->
    <stream>
        
        <!-- The id of the stream -->
        <ssrc>...</ssrc>

        <!-- The start date/time of the stream -->
        <startTime>...</startTime>

        <!-- The end date/time of the stream -->
        <endTime>...</endTime>

        <!-- The c-name of the stream (optional) -->
        <cname>...</cname>
        
        <!-- The name of the stream (optional) --> 
        <name>...</name>

        <!-- The email address of the stream sender (optional) -->
        <email>...</email>

        <!-- The phone number of the stream sender (optional) -->
        <phone>...</phone>

        <!-- The location of the stream sender (optional) -->
        <location>...</location>

        <!-- The tool that sent the stream (optional) -->
        <tool>...</tool>

        <!-- A note about the stream (optional) -->
        <note>...</note>
        
    </stream>
</streams>
}}}

If the return type is application/json, the list will be formatted as follows:
{{{
{"stream":[
    
    /* 0 or more streams */
    {

    /* The id of the stream */
    "ssrc":"...",

    /* The start date/time of the stream */
    "startTime":"...",

    /* The end date/time of the stream */
    "endTime":"...",

    /* The c-name of the stream (optional) */
    "cname":"...",
        
    /* The name of the stream (optional) */
    "name":"...",

    /* The email address of the stream sender (optional) */
    "email":"...",

    /* The phone number of the stream sender (optional) */
    "phone":"...",

    /* The location of the stream sender (optional) */
    "location":"...",

    /* The tool that sent the stream (optional) */
    "tool":"...",

    /* A note about the stream (optional) */
    "note":"..."
    }
    ...
]}
}}}

== List of Layouts == 
If the return type is text/xml, the list will be formatted as follows:

{{{
<replayLayouts>
    
    <!-- 0 or more layouts -->
    <replayLayout>
        
        <!-- The name of the layout (will match a known layout name - see LayoutInterface for details) -->
        <name>...</name>

        <!-- The time in milliseconds from the start of the recording that the layout takes effect -->
        <time>...</time>

        <!-- The time in milliseconds from the start of the recording that the layout stops taking effect -->
        <endTime>...</endTime>

        <!-- One for each position in the layout -->
        <position>
             
            <!-- The name of the position (will match the name of a position in the layout - see LayoutInterface for details) -->
            <name>...</name>

            <!-- The id of the stream in the named position -->
            <stream>...</stream>

        </position>
        ...

        <!-- The id of an audio stream in the layout - one for each audio stream -->
        <audioStream>...</audioStream>
        ...

    </replayLayout>

    ...
</replayLayouts>
}}}

If the return type is text/xml, the list will be formatted as follows:
{{{
{"replayLayout":[

    /* 0 or more layouts */
    {

    /* The name of the layout (will match a known layout name - see LayoutInterface for details) */
    "name":"...",

    /* The time in milliseconds from the start of the recording that the layout takes effect */
    "time":"...",

    /* The time in milliseconds from the start of the recording that the layout stops taking effect */
    "endTime":"...",

    "position":{[

        /* One for each position in the layout */
        {
             
        /* The name of the position (will match the name of a position in the layout - see LayoutInterface for details) */
        "name":"...",

        /* The id of the stream in the named position */
        "stream":"..."
        },
        ...

    ]},
    

    "audioStream":{[
    
        /* The id of an audio stream in the layout - one for each audio stream */
        "...",
        ...
    ]}

    },
    ...
]}
}}}

== Recording Metadata Parameters ==
The parameters that can be set when setting the recording metadata are as follows:
|| *Key* || *Description* || *Requirement* ||
|| metadataPrimaryKey|| The name of primary key of the metadata || Required ||
|| metadata{{{<name>}}} || The metadata value for the key {{{<name>}}} || Required ||
|| metadata{{{<name>}}}Editable || True if the item {{{<name>}}} is editable || Optional ||
|| metadata{{{<name>}}}Visible || True if the item {{{<name>}}} is visible || Optional ||
|| metadata{{{<name>}}}Multiline || True if the item {{{<name>}}} is multiline || Optional ||