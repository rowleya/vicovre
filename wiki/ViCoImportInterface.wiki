#summary Description of the REST interface for sending streams to ViCo.

= Introduction =

This page details the REST interface for sending video streams to !ViCo.  These streams can be an actual video format e.g. an avi file, or a series of images, or a combination of items e.g. a series of video streams and audio streams.

= Details =

|| *HTTP Method* || *URL Format* || *Return Content Types (Default first)* || || * Return Codes * || *Description* ||
|| GET || {{{http://<url>/import/create[?live=true]}}} || *text/plain*, text/xml || 200 (OK), 503 (Unable to create new session) || Gets a new ID for the import from the server ||
|| GET || {{{http://<url>/import/<id>?<stream-parameters>}}} || None || 200 (OK) || Requests that streams be imported from an RTP or AG session. ||
|| POST || {{{http://<url>/import/<id>}}} || None || 200 (OK), 415 (Unsupported media type) || Sends an item to the session with the given {{{<id>}}} ||
|| DELETE || {{{http://<url>/import/<id>}}} || None || 200 (OK) || Stops the session specified.  Future requests to the session will fail. || 

== Live Sessions ==
!ViCo never stores items on disk - they are all held in memory for processing.

A live session implies that the server should continuously read the stream and discard items when no-one is using the export service.  It also suggests that multiple users can read the session using different formats.

In contrast, a non-live session will block on upload (i.e. it won't read the uploaded data) until someone is using the export service for the session.  As soon as someone uses the export service, the read will start, and will only stop when all the data has been converted and read by the export service.  Note that this can result in a time-out of the client performing the upload.  Only one user will be able to use the export service.

== Content Type ==
The POST request expects uploads to use the *multipart/form-data* content type.  The item to be imported should be sent with the headers:
{{{
Content-Disposition: form-data; name="item"
Content-Type: <mime-type>
}}}
where {{{<mime-type>}}} is the content-type being uploaded.

== Multiple Item Import ==
When multiple items are to be uploaded, each can be given a stream id to identify it from the other items.  The stream id is optional - if missed out a stream id of 0 is assumed.  The stream id should be encoded as an element of the multipart/form-data content before the item being sent with the headers:
{{{
Content-Disposition: form-data; name="streamid"
Content-Type: text/plain
}}}
Note that only one item for each stream can be imported at a time.  Should a second upload start before the first has finished, the second will block until the stream becomes free.

== Image Stream Upload ==
When the item to upload is an image from a series of images, the content-type should be 
Including the following fields (as form-data elements as above) will help !ViCo work out the details for playback, but all fields are optional:
|| *Field* || *Description* ||
|| timestamp || The time at which the image should be displayed.  This is relative to other timestamps.  The default is the relative time at which the image was received. ||
|| timeclock || The ticks per second of the timestamp clock.  The default is 1000 (i.e. the clock is in milliseconds). ||
|| frame || The number of the frame.  The default is to start with a frame number of 0 and increment by 1 for each image received. ||
|| inter || "true" or "false".  Indicates that the image is a difference image from the image before.  The default is "false". ||

== Stream Parameters ==
When importing an AG or RTP session, the following parameters are supported:
|| *Parameter* || *Description* ||
|| venue || The Access Grid v3 virtual venue to receive streams from. ||
|| address || The multicast or unicast address to receive streams from. ||
|| port || The port number to listen on for streams when using an address. ||